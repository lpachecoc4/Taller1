String[] headline={
  "¡Bienvenido a LINE!", 
  "Selecciona un nivel para empezar", 
};
String[] completo={
  "¡Felicidades! Completaste el nivel."
};
boolean P;
boolean Q;
boolean control;
int index;
int level;
int ganar;
float hx;
PFont f;
float z;
float w;
float x;
float y;
color grey= color(208, 206, 212);
PVector puntofinal = new PVector(0,0);
PVector puntoinicial = new PVector(0, 0);
PVector M;
PVector A;
PVector punto[]= new PVector [10];
{
  punto[0]=new PVector(200, 20);
  punto[1]=new PVector(400, 20);
  punto[2]=new PVector(600, 20);
  punto[3]=new PVector(400, 120);
  punto[4]=new PVector(300, 220);
  punto[5]=new PVector(500, 220);
  punto[6]=new PVector(400, 320);
  punto[7]=new PVector(200, 420);
  punto[8]=new PVector(400, 420);
  punto[9]=new PVector(600, 420);
}

int ML1[][]={  
  { 0, 1, 0, 0, 0, 0, 0, 1, 0, 0 }, 
  { 1, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, 
  { 0, 1, 0, 0, 0, 0, 0, 0, 0, 1 }, 
  { 0, 1, 0, 0, 1, 1, 1, 0, 0, 0 }, 
  { 0, 0, 0, 1, 0, 0, 1, 0, 0, 0 }, 
  { 0, 0, 0, 1, 0, 0, 1, 0, 0, 0 }, 
  { 0, 0, 0, 1, 1, 1, 0, 0, 1, 0 }, 
  { 1, 0, 0, 0, 0, 0, 0, 0, 1, 0 }, 
  { 0, 0, 0, 0, 0, 0, 1, 1, 0, 1 }, 
  { 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 }
};

ArrayList<PVector> linea = new ArrayList<PVector>();

void setup() {
  size(800, 650);
  x=0;
  y=0;
  level=0;
  P=true;
  Q=true;
  f=createFont("Arial", 30, true);
  hx=width;
}

void draw() {
  
  if (level==0) {
    background(181, 224, 235);
    textFont(f, 16);
    fill(0);
    textSize(50);
    textAlign(LEFT);
    text(headline[index], hx, 120);
    hx=hx-3;
    float limitepantalla=textWidth(headline[index]);
    if (hx<-limitepantalla) {
      hx=width;
      index=(index +1) % headline.length;
    }
    println(mouseX, mouseY);
    textAlign(CENTER);
    textSize(28);
    //text("¡Bienvenido a LINE!", width/2, height/4);
    text("Nivel 1", width/2, height/3);
    text("Nivel 2", width/2, height*2/3);
  }

  if (level==1) {
    background(255);
    int puntoin = punto.indexOf(puntoinicial);
    int puntofi = punto.indexOf(puntofinal);
    strokeWeight(8);
    stroke(grey);
    textAlign(CENTER);
    textSize(40);
    println(mouseX, mouseY);
    text("Reintentar", width/2, 520);
    for (int i=0; i<10; i++) {
      for (int j=0; j<10; j++) {
        if (ML1[i][j]==1) {
          line(punto[i].x, punto[i].y, punto[j].x, punto[j].y);
        };
      }
    };
    stroke(0);
    strokeWeight(10);
    fill(0);
    for (int i=0; i<10; i++) {
      ellipse(punto[i].x, punto [i].y, 20, 20);
    };
    for (int i = 0; i<linea.size()-1; i++) {
      line(linea.get(i).x, linea.get(i).y, linea.get(i+1).x, linea.get(i+1).y);
    }

    M= new PVector(mouseX, mouseY);

    if (!P) {
      line(x, y, mouseX, mouseY);
    };
    loadPixels();
  for (int i=0; i<(width*height)-500000; i++) {
    
    if (pixels[i]==grey) {
      ganar=+1;
    }
  }
    if (ganar==0){
      textFont(f, 16);
    fill(0);
    textSize(50);
    textAlign(LEFT);
    text(completo[index], hx, 120);
    hx=hx-3;
    float limitepantalla=textWidth(completo[index]);
    if (hx<-limitepantalla) {
      hx=width;
      index=(index +1) % completo.length;
    }
    };
    
  };
  
  
}
void mouseClicked() {
  if (350<=mouseX && mouseX<=460 && 190<=mouseY && mouseY<=220) {
    level=1;
  };
  if (350<=mouseX && mouseX<=460 && 410<=mouseY && mouseY<=440) {
    level=2;
  };
  if (level==1 && mouseX<=525 && 295<=mouseX && 485<=mouseY && mouseY<=525) {
    for (int i=linea.size()-1; i>=0; i--) {
      linea.remove(i);
    };
  };
};



void mousePressed () {
  for (int i=0; i<10; i++) {
    for (int j=0; j<2; j++) {
      if (mouseX<=(punto[i].x+10) && mouseX>=(punto[i].x-10) && mouseY<=(punto[i].y+10) && mouseY>=(punto[i].y-10)) {
        x=punto[i].x;
        y=punto[i].y;
        P=false;
      }
    }
  }
}
void mouseReleased () {
  for (int i=0; i<10; i++) {
    for (int j=0; j<10; j++) {
      if (mouseX<=(punto[i].x+10) && mouseX>=(punto[i].x-10) && mouseY<=(punto[i].y+10) && mouseY>=(punto[i].y-10) ) {
        z=punto[i].x;
        w=punto[i].y;
        Q=false;
        P=true;

        linea.add(new PVector(x, y));
        linea.add(new PVector(z, w));
      }
    }
  }
}
